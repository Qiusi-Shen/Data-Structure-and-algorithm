#ifndef SEQUENCE_INCLUDED
#define SEQUENCE_INCLUDED

#include<stdio.h>
#include<string>

typedef std::string ItemType;

class Sequence
{
public:
	Sequence();
	~Sequence();
	Sequence(const Sequence&other);
	Sequence& operator=(const Sequence& other);

	bool empty() const;
	int size() const;
	bool insert(int pos, const ItemType& value);
	int insert(const ItemType& value);
	bool erase(int pos);
	int remove(const ItemType& value);
	bool get(int pos, ItemType& value) const;
	bool set(int pos, const ItemType& value);
	int find(const ItemType& value) const;
	void swap(Sequence& other);
private:

	struct Node												// declare a struct of LinkedList
	{
		ItemType m_value;
		Node *m_next;
		Node *m_prev;
	};
	int m_size;												
	Node *head;										
};

int subsequence(const Sequence& seq1, const Sequence& seq2);

void interleave(const Sequence& seq1, const Sequence& seq2, Sequence& result);

#endif // !SEQUENCE_INCLUDED


